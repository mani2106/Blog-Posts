name: Build and Deploy with Tweet Generation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git diff analysis

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v2

  generate-tweets:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tweet threads
        uses: ./.github/actions/tweet-generator
        with:
          openrouter_api_key: ${{ secrets.OPENROUTER_API_KEY }}
          twitter_api_key: ${{ secrets.TWITTER_API_KEY }}
          twitter_api_secret: ${{ secrets.TWITTER_API_SECRET }}
          twitter_access_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          dry_run: 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, generate-tweets]
    if: always() && needs.build.result == 'success'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  notify-results:
    runs-on: ubuntu-latest
    needs: [build, generate-tweets, deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          echo "## Deployment Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.build.result }}" = "success" ]; then
            echo "✅ **Build**: Successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.generate-tweets.result }}" = "success" ]; then
            echo "✅ **Tweet Generation**: Successful" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.generate-tweets.result }}" = "skipped" ]; then
            echo "⏭️ **Tweet Generation**: Skipped (not main branch)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tweet Generation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "✅ **Deployment**: Successful" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🌐 **Site URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Deployment**: Failed" >> $GITHUB_STEP_SUMMARY
          fi